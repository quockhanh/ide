import {
  AutomationFramework,
  Indent,
  IRmProj,
  ITestCase,
  ITestSuite,
  Language,
  LocatorType,
  TestFramework,
} from "../../../src/file-defs";
import { actionClear } from "../../test-helpers/action-helpers";
import { RmpSpec } from "../../test-helpers/rm-project-spec.types";

/** Creates test spec with everything possible */
export const createTestDataKitchenSink = (): RmpSpec => {
  return {
    projectName: "playwright-typescript-kitchen-sink",
    content: {
      fileVersion: 1,
      name: "",
      description: "",
      automationFramework: AutomationFramework.Playwright,
      testFramework: "",
      language: Language.Typescript,
      rootNamespace: "",
      indent: Indent.Spaces,
      indentSize: 2,
      testIdAttributeName: "",
    },
    configFiles: [
      {
        name: "default",
        settings: [
          {
            name: "TestUser",
            value: "jim",
          },
          {
            name: "TestPassword",
            value: "xxx",
          },
          {
            name: "RememeberMe",
            value: "yes",
          },
          {
            name: "DelayMs",
            value: "2000",
          },
          {
            name: "TheUrl",
            value: "https://github.com/",
          },
          {
            name: "Attr",
            value: "my-o-attr=my-value",
          },
          {
            name: "MyMessage",
            value: "hello world",
          },
        ],
      },
      {
        name: "local",
        settings: [
          {
            name: "TestUser",
            value: "jonh",
          },
          {
            name: "TestPassword",
            value: "yyy",
          },
        ],
      },
    ],
    pages: [
      {
        id: "",
        name: "KitchenSinkScreen",
        description: "Kitchen Sink Screen",
        elements: [
          {
            id: "",
            type: "comment",
            comment: "Elements to locate",
          },
          {
            id: "",
            type: "pageElement",
            name: "attribute",
            findBy: LocatorType.Attribute,
            locator: "data-abd=def",
            description: "attribute",
          },
          {
            id: "",
            type: "pageElement",
            name: "css",
            findBy: LocatorType.Css,
            locator: "div.css-selector",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "customTestId",
            findBy: LocatorType.TestId,
            locator: "locate-me-by-custom-testid",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "id",
            findBy: LocatorType.Id,
            locator: "div-locate-me-by-id",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "iframe",
            findBy: LocatorType.IFrame,
            locator: "locate-me-by-class",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "iframeId",
            findBy: LocatorType.IFrameId,
            locator: "iframe-locate-me-by-id",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "iframeName",
            findBy: LocatorType.IFrameName,
            locator: "iframe-locate-me-by-name",
            description: "",
          },

          {
            id: "",
            type: "pageElement",
            name: "label",
            findBy: LocatorType.Label,
            locator: "Hello",
            description: "",
          },

          {
            id: "",
            type: "pageElement",
            name: "name",
            findBy: LocatorType.Name,
            locator: "locate-me-by-name",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "placeholder",
            findBy: LocatorType.Placeholder,
            locator: "locate-me-by-placeholder",
            description: "",
          },

          {
            id: "",
            type: "pageElement",
            name: "testId",
            findBy: LocatorType.TestId,
            locator: "locate-me-by-testid",
            description: "",
          },

          {
            id: "",
            type: "pageElement",
            name: "text",
            findBy: LocatorType.Text,
            locator: 'Please "Locate me!"',
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "title",
            findBy: LocatorType.Title,
            locator: "locate-me-by-title",
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "xpath",
            findBy: LocatorType.Xpath,
            locator: `//table/tbody/tr/td[1]/div[11]/p/span`,
            description: "",
          },

          {
            id: "",
            type: "comment",
            comment: "Elements to perform actions",
          },

          {
            id: "",
            type: "pageElement",
            name: "clear",
            findBy: LocatorType.Css,
            locator: `.action-clear`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "click",
            findBy: LocatorType.Css,
            locator: `.action-click`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "clickButton",
            findBy: LocatorType.Css,
            locator: `.action-click-button`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "dblClickButton",
            findBy: LocatorType.Css,
            locator: `.action-click-button`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "clickInput",
            findBy: LocatorType.Css,
            locator: `.action-click-input`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "clickPopup",
            findBy: LocatorType.Css,
            locator: `.link-click-popup`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "input",
            findBy: LocatorType.Css,
            locator: `.action-input`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "selectOption",
            findBy: LocatorType.Css,
            locator: `select`,
            description: "",
          },

          {
            id: "",
            type: "comment",
            comment: "Elements to verify",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyAttribute",
            findBy: LocatorType.Css,
            locator: `.verify-attribute`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyHasText",
            findBy: LocatorType.Css,
            locator: `.verify-has-text`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyHasValue",
            findBy: LocatorType.Css,
            locator: `.verify-has-value`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyIsHidden",
            findBy: LocatorType.Css,
            locator: `.verify-hidden`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyEditable",
            findBy: LocatorType.Css,
            locator: `.verify-editable`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyReadOnly",
            findBy: LocatorType.Css,
            locator: `.verify-readonly`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "verifyVisible",
            findBy: LocatorType.Css,
            locator: `.verify-visible`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "routineInput1",
            findBy: LocatorType.Css,
            locator: `.routine-input-1`,
            description: "",
          },
          {
            id: "",
            type: "pageElement",
            name: "clickPopup2",
            findBy: LocatorType.Css,
            locator: `.link-click-popup2`,
            description: "",
          },
        ],
      },
      {
        id: "",
        name: "Popup1",
        description: "Popup 1",
        elements: [
          {
            id: "",
            type: "pageElement",
            name: "button",
            findBy: LocatorType.Css,
            locator: "button",
            description: "Click button",
          },
          {
            id: "",
            type: "pageElement",
            name: "input",
            findBy: LocatorType.Css,
            locator: "input",
            description: "input",
          },
        ],
      },
      {
        id: "",
        name: "Popup2",
        description: "Popup 2",
        elements: [
          {
            id: "",
            type: "pageElement",
            name: "button",
            findBy: LocatorType.Css,
            locator: ".popup2-button",
            description: "Click button",
          },
          {
            id: "",
            type: "pageElement",
            name: "input",
            findBy: LocatorType.Css,
            locator: "input",
            description: ".popup2-input",
          },
        ],
      },
    ],
    testcases: [
      {
        id: "",
        name: "KichenSink",
        description: "Contains everything possible",
        steps: [
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "GoToUrl",
            // Chechkout repo https://dev.azure.com/zapcentral/zap-forks/_git/playwright-test-pages and run the local website
            data: "http://localhost:3000/kitchen-sink.html",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "AddComment",
            data: "Here is a comment",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "clear",
            action: "Clear",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "clickButton",
            action: "Click",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "clickPopup",
            action: "ClickPopup",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "SwitchTab",
            data: "1",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitle",
            data: "Popup 1",
          },

          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "ClosePopup",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "SwitchTab",
            data: "Kitchen",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitle",
            data: "Kitchen Sink",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "Delay",
            data: "{DelayMs}",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "dblClickButton",
            action: "DblClick",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "input",
            action: "Input",
            data: "{MyMessage}",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "input",
            action: "InputByCode",
            // For typescript
            //data: "(new Date()).getFullYear().toString()",
            // For C#
            data: "DateTime.Now.Year.ToString()",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "RunCode",
            // For typescript
            //data: '// await this.defs.KitchenSinkScreenPage.selectOption().selectOption("hello"); // RunCode',
            // For C#
            data: '// await defs.KitchenSinkScreenPage.SelectOption().SelectOptionAsync("hello"); // RunCode',
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "selectOption",
            action: "SelectOption",
            data: "world",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyAttribute",
            action: "VerifyAttribute",
            data: "my-o-attr=my-value",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyAttribute",
            action: "VerifyAttribute",
            //data: "{Attr}",
            data: "my-o-attr=my-value",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyHasText",
            action: "VerifyHasText",
            data: "Hello World",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyHasValue",
            action: "VerifyHasValue",
            data: "Hello World",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyEditable",
            action: "VerifyIsEditable",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyReadOnly",
            action: "VerifyIsReadOnly",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyVisible",
            action: "VerifyIsVisible",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "verifyIsHidden",
            action: "VerifyIsHidden",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitle",
            data: "Kitchen Sink",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitleContains",
            data: "Kitchen",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyUrl",
            data: "http://localhost:3000/kitchen-sink.html",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "RunTestRoutine",
            data: "Stove",
            parameters: ["StoveDs1"],
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitle",
            data: "Popup 2",
          },
          {
            id: "",
            type: "testStep",
            page: "Popup2",
            element: "button",
            action: "Click",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "RunTestRoutine",
            data: "Pan",
            parameters: ["PanDs1"],
          },

          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "ClosePopup",
            data: "",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "SwitchTab",
            data: "0",
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitle",
            data: "Kitchen Sink",
          },
        ],
      },
    ],
    testroutines: [
      {
        id: "",
        name: "Pan",
        description: "Pan Test Routine",
        steps: [
          {
            id: "",
            type: "testStep",
            page: "Popup2",
            element: "input",
            action: "VerifyHasValue",
            data: {
              PanDs1: "World",
              PanDs2: "Darkness",
            },
          },
        ],
        dataSets: [
          {
            id: "",
            name: "PanDs1",
            description: "One One One",
          },
          {
            id: "",
            name: "PanDs2",
            description: "Two Two Two",
          },
        ],
      },
      {
        id: "",
        name: "Stove",
        description: "Stove Test Routine",
        steps: [
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "routineInput1",
            action: "Input",
            data: {
              StoveDs1: "Hello world!",
              StoveDs2: "Hello Darkness",
            },
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "routineInput1",
            action: "VerifyHasValue",
            data: {
              StoveDs1: "Hello world!",
              StoveDs2: "Hello Darkness",
            },
          },
          {
            id: "",
            type: "testStep",
            page: "KitchenSinkScreen",
            element: "clickPopup2",
            action: "ClickPopup",
            data: {
              StoveDs1: "",
              StoveDs2: "",
            },
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "SwitchTab",
            data: {
              StoveDs1: "1",
              StoveDs2: "1",
            },
          },
          {
            id: "",
            type: "testStep",
            page: "",
            element: "",
            action: "VerifyTitle",
            data: {
              StoveDs1: "Popup 2",
              StoveDs2: "Popup 2",
            },
          },
        ],
        dataSets: [
          {
            id: "",
            name: "StoveDs1",
            description: "One One One",
          },
          {
            id: "",
            name: "StoveDs2",
            description: "Two Two Two",
          },
        ],
      },
    ],
    testsuites: [
      {
        id: "",
        name: "Kichen",
        description: "Test Kichen",
        testcases: ["KichenSink"],
      },
    ],
    outputFiles: [],
  };
};
